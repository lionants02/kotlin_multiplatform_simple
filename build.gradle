/*
 * MIT License
 *
 * Copyright (c) 2020 Max Thanachai Thongkum
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

plugins {
    id("maven-publish")
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.72'
}

repositories {
    mavenCentral()
    jcenter()
}
group 'th.max.sample'
version '0.0.1'

apply plugin: 'maven-publish'

kotlin {
    jvm()
    js {
        browser {
        }
        nodejs {
        }
    }

    targets {
        iosArm32()
        iosArm64()
        iosX64()
        watchosArm32()
        watchosArm64()
        watchosX86()
        tvosArm64()
        tvosX64()
        macosX64()

        configure([iosArm32, iosArm64, iosX64, watchosArm32, watchosArm64, watchosX86, tvosArm64, tvosX64, macosX64]) {
            binaries.framework {
                baseName = "my_framework"
            }
        }

        mingwX64()
        linuxArm64()
        linuxArm32Hfp()
        linuxMips32()
        linuxMipsel32()
        linuxX64()
        androidNativeArm32()
        androidNativeArm64()

        configure([linuxX64, linuxMipsel32, linuxMips32, linuxArm32Hfp, linuxArm64, mingwX64, androidNativeArm32, androidNativeArm64]) {
            binaries.sharedLib {
                baseName = "my_framework"
            }
        }
    }


    wasm32()
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
            }
        }
        jvmTest {
            dependencies {
                implementation 'org.amshove.kluent:kluent:1.61'
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
        mingwMain {
        }
        mingwTest {
        }
    }
}